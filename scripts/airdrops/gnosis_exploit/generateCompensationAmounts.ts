import fs from "fs";
import path from "path";

interface Loss {
    address: string
    usd_loss: number
}

function generateCompensation() {
    const lossLocation = path.join(__dirname, "accounts.json");
    const compLocation = path.join(__dirname, "ve-gno-compensation.json");

    let losses = JSON.parse(fs.readFileSync(lossLocation).toString());
    let compensations: any[] = [];

    const totalCompensation = 17010;
    const totalLoss: number = losses.map((l: Loss) => l.usd_loss).reduce((a: number, b: number) => a + b);

    const compPerLoss = totalCompensation / totalLoss;

    losses.forEach((loss: Loss) => {
        compensations.push({
            address: loss.address,
            compensation: loss.usd_loss * compPerLoss
        })
    });

    const sumCompo = compensations.map(c => c.compensation).reduce((a, b) => a + b);
    console.log("compo sum: ", sumCompo);

    fs.writeFileSync(compLocation, JSON.stringify(compensations, null, 4));
}

generateCompensation();